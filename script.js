// === –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–∞ ===
function switchLanguage(lang) {
  document.documentElement.lang = lang;

  // –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ä–∞–∑–¥–µ–ª–æ–≤
  document.querySelectorAll('.section-title').forEach(title => {
    if (title.dataset[lang]) {
      title.textContent = title.dataset[lang];
    }
  });

  // –ú–µ—Ç–∫–∏
  document.querySelectorAll('.check-label').forEach(label => {
    if (label.dataset[lang]) {
      label.textContent = label.dataset[lang];
    }
  });

  // –û–ø—Ü–∏–∏ —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤
  document.querySelectorAll('select').forEach(select => {
    Array.from(select.options).forEach(option => {
      if (option.dataset[lang]) {
        option.textContent = option.dataset[lang];
      }
    });
  });

  // –û–±–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –ø—É—Å—Ç—ã—Ö –æ–ø—Ü–∏–π
  document.querySelectorAll('select.qty').forEach(select => {
    const emptyOption = select.querySelector('option[value=""]');
    if (emptyOption) {
      emptyOption.textContent = lang === 'en' ? '‚Äî Select ‚Äî' : '‚Äî –í—ã–±—Ä–∞—Ç—å ‚Äî';
    }
  });
}

// === DOMContentLoaded ===
document.addEventListener('DOMContentLoaded', () => {
  const lang = document.documentElement.lang || 'ru';

  // –í—Å—Ç–∞–≤–∫–∞ –ø—É—Å—Ç–æ–π –æ–ø—Ü–∏–∏ –≤–æ –≤—Å–µ select.qty
  document.querySelectorAll('select.qty').forEach(select => {
    const hasEmpty = Array.from(select.options).some(opt => opt.value === '');
    if (!hasEmpty) {
      const emptyOption = document.createElement('option');
      emptyOption.value = '';
      emptyOption.dataset.ru = '‚Äî –ù–µ –≤—ã–±—Ä–∞–Ω–æ ‚Äî';
      emptyOption.dataset.en = '‚Äî Not selected ‚Äî';
      emptyOption.textContent = lang === 'en' ? '‚Äî Not selected ‚Äî' : '‚Äî –ù–µ –≤—ã–±—Ä–∞–Ω–æ ‚Äî';
      select.insertBefore(emptyOption, select.firstChild);
    }
  });

  // –ü—Ä–∏–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–ø—Ü–∏–π
  switchLanguage(lang);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏
  const button = document.getElementById('sendToTelegram');
  button.addEventListener('click', () => {
    const lang = document.documentElement.lang || 'ru';
    let message = `üßæ <b>–ß–µ–∫–ª–∏—Å—Ç</b>\n\n`;

    // === –î–∞—Ç–∞ ===
    const day = document.querySelector('select[name="day"]')?.value || '‚Äî';
    const month = document.querySelector('select[name="month"]')?.value || '‚Äî';
    const dateLine = lang === 'en' ? `üìÖ Date: ${day}/${month}` : `üìÖ –î–∞—Ç–∞: ${day}/${month}`;
    message += `${dateLine}\n`;

    // === –ò–º—è ===
    const nameSelect = document.querySelector('select[name="chef"]');
    const selectedChef = nameSelect?.options[nameSelect.selectedIndex];
    const nameLine = lang === 'en' 
      ? `üë®‚Äçüç≥ Name: ${(selectedChef?.dataset.en || '‚Äî Not selected ‚Äî')}`
      : `üë®‚Äçüç≥ –ò–º—è: ${(selectedChef?.dataset.ru || '‚Äî –ù–µ –≤—ã–±—Ä–∞–Ω–æ ‚Äî')}`;
    message += `${nameLine}\n\n`;

    // === –í—Å–µ —Ä–∞–∑–¥–µ–ª—ã ===
    document.querySelectorAll('.menu-section').forEach(section => {
      const sectionTitle = section.querySelector('.section-title');
      const title = sectionTitle?.dataset[lang] || sectionTitle?.textContent || '';

      message += `üî∏ <b>${title}</b>\n`;

      // –í—Å–µ .dish –≤–Ω—É—Ç—Ä–∏
      const dishBlocks = section.querySelectorAll('.dish');
      dishBlocks.forEach(dish => {
        const select = dish.querySelector('select.qty');
        const label = dish.querySelector('label.check-label');

        if (select && label) {
          const labelRU = select.dataset.labelRu || label.dataset.ru || '';
          const labelEN = select.dataset.labelEn || label.dataset.en || '';
          const selectedOption = select.options[select.selectedIndex];

          const valueRU = selectedOption?.dataset.ru || '‚Äî –ù–µ –≤—ã–±—Ä–∞–Ω–æ ‚Äî';
          const valueEN = selectedOption?.dataset.en || '‚Äî Not selected ‚Äî';

          message += `‚Ä¢ ${labelRU} / ${labelEN}: ${valueRU} / ${valueEN}\n`;
        }
      });

      // === –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π ===
      const comment = section.nextElementSibling?.querySelector('textarea.comment');
      if (comment && comment.value.trim()) {
        message += `üí¨ ${lang === 'en' ? 'Comment' : '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π'}: ${comment.value.trim()}\n`;
      }

      message += `\n`;
    });

    // === –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram ===
    const token = '8348920386:AAFlufZWkWqsH4-qoqSSHdmgcEM_s46Ke8Q';
    const chat_id = '-1002393080811';

    fetch(`https://api.telegram.org/bot${token}/sendMessage`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        chat_id,
        text: message,
        parse_mode: 'HTML'
      })
    })
    .then(res => res.json())
    .then(data => {
      if (data.ok) {
        alert('‚úÖ –ß–µ–∫–ª–∏—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!');
      } else {
        alert('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram');
      }
    })
    .catch(err => {
      alert('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram');
      console.error(err);
    });
  });
});