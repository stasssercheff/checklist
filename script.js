// === –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–∞ ===
function switchLanguage(lang) {
  // –ó–∞–≥–æ–ª–æ–≤–∫–∏
  document.querySelectorAll('.section-title').forEach(title => {
    if (title.dataset[lang]) {
      title.textContent = title.dataset[lang];
    }
  });

  // –ú–µ—Ç–∫–∏
  document.querySelectorAll('.check-label').forEach(label => {
    if (label.dataset[lang]) {
      label.textContent = label.dataset[lang];
    }
  });

  // –û–ø—Ü–∏–∏ –≤ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞—Ö
  document.querySelectorAll('select').forEach(select => {
    Array.from(select.options).forEach(option => {
      if (option.dataset[lang]) {
        option.textContent = option.dataset[lang];
      }
    });
  });
}

// === –ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞ ===
document.addEventListener('DOMContentLoaded', () => {
  const form = document.querySelector('form') || document.body;

  // === –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ ===
  const button = document.createElement('button');
  button.textContent = '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ Telegram';
  button.className = 'send-button';
  form.appendChild(button);

  // === –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—É—Å—Ç–æ–π –æ–ø—Ü–∏–∏ –≤ –∫–∞–∂–¥—ã–π —Å–µ–ª–µ–∫—Ç–æ—Ä qty ===
  document.querySelectorAll('select.qty').forEach(select => {
    const hasEmpty = Array.from(select.options).some(opt => opt.value === '');
    if (!hasEmpty) {
      const emptyOption = document.createElement('option');
      emptyOption.value = '';
      emptyOption.dataset.ru = '‚Äî –í—ã–±—Ä–∞—Ç—å ‚Äî';
      emptyOption.dataset.en = '‚Äî Select ‚Äî';
      emptyOption.textContent = document.documentElement.lang === 'en' ? '‚Äî Select ‚Äî' : '‚Äî –í—ã–±—Ä–∞—Ç—å ‚Äî';
      select.insertBefore(emptyOption, select.firstChild);
    }
  });

  // === –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ ===
  button.addEventListener('click', () => {
    const selects = document.querySelectorAll('select.qty');
    const lang = document.documentElement.lang || 'ru';

    let message = `üßæ <b>–ß–µ–∫–ª–∏—Å—Ç</b>\n\n`;

    selects.forEach(select => {
      const selected = select.options[select.selectedIndex];
      if (!selected || selected.value === '') return;

      const labelRU = select.dataset.labelRu;
      const labelEN = select.dataset.labelEn;
      const valueRU = selected.dataset.ru || selected.textContent;
      const valueEN = selected.dataset.en || selected.textContent;

      if (labelRU && labelEN) {
        message += `‚Ä¢ ${labelRU} / ${labelEN}: ${valueRU} / ${valueEN}\n`;
      }
    });

    const token = '8348920386:AAFlufZWkWqsH4-qoqSSHdmgcEM_s46Ke8Q';
    const chat_id = '-1002393080811';

    fetch(`https://api.telegram.org/bot${token}/sendMessage`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        chat_id: chat_id,
        text: message,
        parse_mode: 'HTML'
      })
    })
    .then(res => res.json())
    .then(data => {
      if (data.ok) {
        alert('‚úÖ –ß–µ–∫–ª–∏—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!');
      } else {
        alert('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram');
      }
    })
    .catch(err => {
      alert('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram');
      console.error(err);
    });
  });
});